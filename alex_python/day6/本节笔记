首先是面向对象的介绍

世界万物，皆可分类
世界万物，皆为对象
只要是对象，就肯定属于某种品类
只要是对象，就肯定有属性

你是上帝，地球上一无所有，需要你来创造新世界，山川，河流，大海，森林


特性
class
object
实例
封装
继承
多态


语法
正常情况下： 调用函数————》执行--》返回结果
r1 = Role.__init__() return x0230440 返回的内存地址
r1 = Role(r1,"alex","police","15000")
self 就是为了接受r1的变量值
r1.name = "alex"
r1.role = "police"
r1.money = 15000

属性
方法
构造函数
析构函数

私有方法，私有属性，实例变量
编程范式：
对这些不同的编程方式的特点进行归纳总结得出来的编程方式类别，
即为编程范式。 不同的编程范式本质上代表对各种类型的任务采取的不同的解决问题的思路，
 大多数语言只支持一种编程范式，当然也有些语言可以同时支持多种编程范式。
两种最重要的编程范式分别是面向过程编程和面向对象编程。

面向过程编程(Procedural Programming)
Procedural programming uses a list of instructions to tell the computer what to do step-by-step.
面向过程编程依赖 - 你猜到了- procedures，一个procedure包含一组要被进行计算的步骤，
 面向过程又被称为top-down languages，
 就是程序从上到下一步步执行，一步步从上到下，
 从头到尾的解决问题 。基本设计思路就是程序一开始是
 要着手解决一个大的问题，然后把一个大问题分解成很多个小问题
 或子过程，这些子过程再执行的过程再继续分解直到小问题足够简
 单到可以在一个小步骤范围内解决。

 面向对象编程

OOP编程是利用“类”和“对象”来创建各种模型来实现对真实世界的描述
，使用面向对象编程的原因一方面是因为它可以使程序的维护和扩展变
得更简单，并且可以大大提高程序开发效率 ，另外，基于面向对象的
程序可以使它人更加容易理解你的代码逻辑，从而使团队开发变得更从
容。

面向对象的几个核心特性如下

Class 类
一个类即是对一类拥有相同属性的对象的抽象、蓝图、原型。在类中定
义了这些对象的都具备的属性（variables(data)）、共同的方法

Object 对象
一个对象即是一个类的实例化后实例，一个类必须经过实例化后方可
在程序中调用，一个类可以实例化多个对象，每个对象亦可以有不同
的属性，就像人类是指所有人，每个人是指具体的对象，人与人之前
有共性，亦有不同

Encapsulation 封装
在类中对数据的赋值、内部调用对外部用户是透明的，这使类变成了一
个胶囊或容器，里面包含着类的数据和方法

Inheritance 继承
一个类可以派生出子类，在这个父类里定义的属性、方法自动被子类
继承

Polymorphism 多态
多态是面向对象的重要特性,简单点说:“一个接口，多种实现”，指一个
基类中派生出了不同的子类，且每个子类在继承了同样的方法名的同时
又对父类的方法做了不同的实现，这就是同一种事物表现出的多种形
态。

编程其实就是一个将具体世界进行抽象化的过程，多态就是抽象化的
一种体现，把一系列具体事物的共同点抽象出来, 再通过这个抽象的
事物, 与不同的具体事物进行对话。
对不同类的对象发出相同的消息将会有不同的行为。比如，你的老板
让所有员工在九点钟开始工作, 他只要在九点钟的时候说：“开始工作”
即可，而不需要对销售人员说：“开始销售工作”，对技术人员说：
“开始技术工作”, 因为“员工”是一个抽象的事物, 只要是员工就可以开始工作，他知道这一点就行了。至于每个员工，当然会各司其职，做各自的工作。
多态允许将子类的对象当作父类的对象使用，某父类型的引用指向
其子类型的对象,调用的方法是该子类型的方法。这里引用和调用方法
的代码编译前就已经决定了,而引用所指向的对象可以在运行期间动态
绑定


day6 04已经看完！





